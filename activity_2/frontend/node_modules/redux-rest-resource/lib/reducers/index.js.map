{"version":3,"sources":["../../src/reducers/index.js"],"names":["defaultReducers","create","state","action","status","isCreating","items","body","fetch","isFetching","didInvalidate","isPartialContent","code","contentRange","first","concat","slice","last","i","newItem","push","lastUpdated","receivedAt","get","isFetchingItem","didInvalidateItem","actionOpts","options","item","update","assignResponse","updatedItems","listItemIndex","findIndex","el","id","splice","lastUpdatedItem","isUpdating","context","updatedItem","delete","isDeleting","filter","createReducer","actionId","resourceName","resourcePluralName","reduce","isPure","Error","gerundName","gerundStateKey","createReducers","actions","globalOpts","actionKeys","Object","keys","actionReducers","reducerKey","toLowerCase","createRootReducer","reducers","scope","scopeNamespace","rootReducer","String","type","startsWith","substr","length","initialState"],"mappings":"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","file":"index.js","sourcesContent":["import {initialState} from './../defaults';\nimport {getTypesScope, getActionType} from './../types';\nimport {getGerundName, isFunction, ucfirst, parseContentRangeHeader} from './../helpers/util';\n\nconst defaultReducers = {\n  create: (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        // Add object to store as soon as possible?\n        return {...state,\n          isCreating: true\n          // items: [{\n          //   id: state.items.reduce((maxId, obj) => Math.max(obj.id, maxId), -1) + 1,\n          //   ...action.context\n          // }, ...state.items]\n        };\n      case 'resolved':\n        // Assign returned object\n        return {...state,\n          isCreating: false,\n          items: [...(state.items || []), action.body]\n        };\n      case 'rejected':\n        return {...state,\n          isCreating: false\n        };\n      default:\n        return state;\n    }\n  },\n  fetch: (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        return {...state,\n          isFetching: true,\n          didInvalidate: false\n        };\n      case 'resolved': {\n        const isPartialContent = action.code === 206;\n        let items = [];\n        if (isPartialContent && action.contentRange) {\n          const {contentRange} = action;\n          if (contentRange.first > 0) {\n            items = items.concat(state.items.slice(0, contentRange.last));\n          }\n          for (let i = contentRange.first; i <= contentRange.last; i += 1) {\n            const newItem = action.body[i - contentRange.first];\n            if (newItem != null) {\n              items.push(newItem);\n            }\n          }\n        } else {\n          items = items.concat(action.body);\n        }\n\n        return {...state,\n          isFetching: false,\n          didInvalidate: false,\n          items,\n          lastUpdated: action.receivedAt\n        };\n      }\n      case 'rejected':\n        return {...state,\n          isFetching: false,\n          didInvalidate: false\n        };\n      default:\n        return state;\n    }\n  },\n  get: (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        return {...state,\n          isFetchingItem: true,\n          didInvalidateItem: false\n        };\n      case 'resolved': {\n        const actionOpts = action.options || {};\n        const item = action.body;\n        const update = {};\n        if (actionOpts.assignResponse) {\n          const updatedItems = state.items;\n          const listItemIndex = updatedItems.findIndex(el => el.id === item.id);\n          if (listItemIndex !== -1) {\n            updatedItems.splice(listItemIndex, 1, item);\n            update.items = updatedItems.slice();\n          }\n        }\n        return {...state,\n          isFetchingItem: false,\n          didInvalidateItem: false,\n          lastUpdatedItem: action.receivedAt,\n          item,\n          ...update\n        };\n      }\n      case 'rejected':\n        return {...state,\n          isFetchingItem: false,\n          didInvalidateItem: false\n        };\n      default:\n        return state;\n    }\n  },\n  update: (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        // Update object in store as soon as possible?\n        return {...state,\n          isUpdating: true\n        };\n      case 'resolved': {\n        // Assign context or returned object\n        const id = action.context.id || action.context;\n        const actionOpts = action.options || {};\n        const update = actionOpts.assignResponse ? action.body : action.context;\n        const listItemIndex = state.items.findIndex(el => el.id === id);\n        const updatedItems = state.items.slice();\n        if (listItemIndex !== -1) {\n          updatedItems[listItemIndex] = {...updatedItems[listItemIndex], ...update};\n        }\n        const updatedItem = state.item && state.item.id === id\n          ? {...state.item, ...update}\n          : state.item;\n        return {...state,\n          isUpdating: false,\n          items: updatedItems,\n          item: updatedItem\n        };\n      }\n      case 'rejected':\n        return {...state,\n          isUpdating: false\n        };\n      default:\n        return state;\n    }\n  },\n  delete: (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        // Update object in store as soon as possible?\n        return {...state,\n          isDeleting: true\n        };\n      case 'resolved': // eslint-disable-line\n        const id = action.context.id || action.context;\n        return {...state,\n          isDeleting: false,\n          items: [...state.items.filter(el => el.id !== id)]\n        };\n      case 'rejected':\n        return {...state,\n          isDeleting: false\n        };\n      default:\n        return state;\n    }\n  }\n};\n\n\nconst createReducer = (actionId, {resourceName, resourcePluralName = `${resourceName}s`, ...actionOpts}) => {\n  // Custom reducers\n  if (actionOpts.reduce && isFunction(actionOpts.reduce)) {\n    return actionOpts.reduce;\n  }\n  // Do require a custom reduce function for pure actions\n  if (actionOpts.isPure) {\n    throw new Error(`Missing \\`reduce\\` option for pure action \\`${actionId}\\``);\n  }\n  // Default reducers\n  if (defaultReducers[actionId]) {\n    return defaultReducers[actionId];\n  }\n  // Custom actions\n  const gerundName = actionOpts.gerundName || getGerundName(actionId);\n  const gerundStateKey = `is${ucfirst(gerundName)}`;\n  return (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        // Update object in store as soon as possible?\n        return {...state,\n          [gerundStateKey]: true\n        };\n      case 'resolved': // eslint-disable-line\n        return {...state,\n          [gerundStateKey]: false\n        };\n      case 'rejected':\n        return {...state,\n          [gerundStateKey]: false\n        };\n      default:\n        return state;\n    }\n  };\n};\n\nconst createReducers = (actions = {}, {resourceName, resourcePluralName, ...globalOpts} = {}) => {\n  const actionKeys = Object.keys(actions);\n  return actionKeys.reduce((actionReducers, actionId) => {\n    const actionOpts = {...globalOpts, ...actions[actionId]};\n    const reducerKey = getActionType(actionId).toLowerCase();\n    actionReducers[reducerKey] = createReducer(actionId, {resourceName, resourcePluralName, ...actionOpts});\n    return actionReducers;\n  }, {});\n};\n\nconst createRootReducer = (\n  reducers = {},\n  {\n    resourceName,\n    resourcePluralName,\n    scope = getTypesScope(resourceName),\n    ...globalOpts\n  } = {}\n) => {\n  const scopeNamespace = scope ? `${scope}/` : '';\n  const rootReducer = (state = {...initialState}, action) => {\n    // Only process relevant namespace\n    if (scopeNamespace && !String(action.type).startsWith(scopeNamespace)) {\n      return state;\n    }\n    // Only process relevant action type\n    const type = action.type.substr(scopeNamespace.length).toLowerCase();\n    // Check for a matching reducer\n    if (reducers[type]) {\n      return reducers[type](state, action);\n    }\n    return state;\n  };\n  return rootReducer;\n};\n\nexport {initialState, defaultReducers, createReducer, createReducers, createRootReducer};\n"]}